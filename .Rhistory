an <- "# Zurique é a capital da Suíça.
# Italiano é uma língua oficial na Suíça.
# A moeda na Suíça é o euro.
# A Suíça faz parte da União Européia (UE).
# O feriado nacional da Suíça é 1 de agosto."
total <- str_count(an, pattern = "#")
correct <- '1,4'
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution <- paste(exsolution , collapse ="")
exsolution
an <- gsub("#", "*", an)
an <- "# Zurique é a capital da Suíça.
# Italiano é uma língua oficial na Suíça.
# A moeda na Suíça é o euro.
# A Suíça faz parte da União Européia (UE).
# O feriado nacional da Suíça é 1 de agosto."
total <- str_count(an, pattern = "#")
correct <- '1,4'
library("stringr", lib.loc="~/R/win-library/3.3")
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
total <- str_count(an, pattern = "#")
?str_count
?strsplit
an <- "# Zurique é a capital da Suíça.
# Italiano é uma língua oficial na Suíça.
# A moeda na Suíça é o euro.
# A Suíça faz parte da União Européia (UE).
# O feriado nacional da Suíça é 1 de agosto."
library(stringr)
total <- str_count(an, pattern = "#")
correct <- '1,4'
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution <- paste(exsolution , collapse ="")
exsolution
an <- gsub("#", "*", an)
exsolution
exsolution[exsolution == 0]
valores <- exsolution[exsolution == 0] <- '* Falso\n'
valores
exsolution[exsolution == 0]
exsolution
exsolution[exsolution == 0]
exsolution == 0
library(stringr)
total <- str_count(an, pattern = "#")
correct <- '1,4'
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution
exsolution
exsolution
an <- "# Zurique é a capital da Suíça.
# Italiano é uma língua oficial na Suíça.
# A moeda na Suíça é o euro.
# A Suíça faz parte da União Européia (UE).
# O feriado nacional da Suíça é 1 de agosto."
library(stringr)
total <- str_count(an, pattern = "#")
correct <- '1,4'
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution
as.numeric(split)
exsolution[as.numeric(split)] <- 1
exsolution
exsolution == 0
exsolution[exsolution == 0]
valores <- exsolution[exsolution == 0] <- '* Falso\n'
valores
valores <- exsolution
valores
valores <- exsolution[exsolution == 1] <- '* Verdadeiro\n'
valores
valores
exsolution
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution
valores <- exsolution
valores <- [valores == 0] <- '* Falso\n'
valores <- valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution
valores <- exsolution
valores
valores <- valores[valores == 0] <- '* Falso\n'
valores
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
valores <- exsolution
valores[valores == 0] <- '* Falso\n'
valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
valores
runApp('C:/Users/Eloi/Desktop/outro')
setwd("C:/Users/Eloi/Desktop/outro")
exsolution
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution
valores <- exsolution
valores[valores == 0] <- '* Falso\n'
valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
valores
exsolution
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
exsolution
if(length(exsolution[exsolution == 1]) == 1 ){
print('schoice')
} else { print('mchoice')}
correct <- '1' # será exsolutionInput
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
if(length(exsolution[exsolution == 1]) == 1 ){
print('schoice')
} else { print('mchoice')}
correct <- '1,5' # será exsolutionInput
split <- unlist(strsplit(correct, ","))
exsolution <- rep(0,total)
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
if(length(exsolution[exsolution == 1]) == 1 ){
print('schoice')
} else { print('mchoice')}
?library
criarExer <- function(codeInput,questionInput,answerlist1Input,solutionInput,
answerlist2Input,exnameInput,exsolutionInput,
exshuffleInput,nameInput,user){
code <- '```{r data generation, echo = FALSE, results = "hide"}'
codeInput <- paste0(codeInput,'\n```')
question <- "\nQuestion\n========"
# questionInput
answerlist <- "\nAnswerlist\n----------"
# answerlist1Input
solution <- "\nSolution\n========"
# solutionInput
metaInformation <- "\nMeta-information\n================"
exnameInput <- paste0("exname: ",exnameInput,';;')
total <- str_count(answerlist1Input, pattern = "#")
# exsolutionInput <- '1,5' # será exsolutionInput
split <- unlist(strsplit(exsolutionInput, ","))
# preenche de 0
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
if(length(exsolution[exsolution == 1]) == 1 ){
extype <- 'extype: schoice'
} else { extype <- 'extype: mchoice'}
# answerlist2Input OPTIONAL
valores <- exsolution
valores[valores == 0] <- '* Falso\n'
valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
# EXSOLUTION FINAL
exsolution <- paste(exsolution , collapse ="")
exsolution <- paste0('exsolution: ',exsolution)
answerlist1Input <- gsub("#", "*", answerlist1Input)
cat(code,codeInput,question,questionInput,
answerlist,answerlist1Input,
solution,solutionInput,answerlist,answerlist2Input,metaInformation,exnameInput,
extype,exsolution,
file = paste0('usuarios/',user,'/EXS/',nameInput,'.Rmd'),sep = "\n")
}
este <- "# Zurich is the capital of Switzerland.
# Italian is an official language in Switzerland.
# The currency in Switzerland is the Euro.
# Switzerland is part of the European Union (EU).
# The Swiss national holiday is August 1."
a <- "Qual é a sede das autoridades federais na Suíça (ou seja, a capital de fato)?"
b <- "# Basileia
# Berna
# Geneva
# Lausana
# Zurique
# São Galo
# Vaduz "
c <- "Não há capital de jure,
mas a capital de facto e a sede
das autoridades federais são em Berna."
d <- "* Falso
* Verdadeiro
* Falso
* Falso
* Falso
* Falso
* Falso"
e <- "capital de fato da Suíça, apenas uma resposta correta"
criarExer <- function(codeInput = "",questionInput,answerlist1Input,solutionInput = "",
answerlist2Input,exnameInput,exsolutionInput,
exshuffleInput,nameInput,user){
code <- '```{r data generation, echo = FALSE, results = "hide"}'
codeInput <- paste0(codeInput,'\n```')
question <- "\nQuestion\n========"
# questionInput
answerlist <- "\nAnswerlist\n----------"
# answerlist1Input
solution <- "\nSolution\n========"
# solutionInput
metaInformation <- "\nMeta-information\n================"
exnameInput <- paste0("exname: ",exnameInput,';;')
total <- str_count(answerlist1Input, pattern = "#")
# exsolutionInput <- '1,5' # será exsolutionInput
split <- unlist(strsplit(exsolutionInput, ","))
# preenche de 0
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
if(length(exsolution[exsolution == 1]) == 1 ){
extype <- 'extype: schoice'
} else { extype <- 'extype: mchoice'}
# answerlist2Input OPTIONAL
valores <- exsolution
valores[valores == 0] <- '* Falso\n'
valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
# EXSOLUTION FINAL
exsolution <- paste(exsolution , collapse ="")
exsolution <- paste0('exsolution: ',exsolution)
answerlist1Input <- gsub("#", "*", answerlist1Input)
cat(code,codeInput,question,questionInput,
answerlist,answerlist1Input,
solution,solutionInput,answerlist,answerlist2Input,metaInformation,exnameInput,
extype,exsolution,
file = paste0('usuarios/',user,'/EXS/',nameInput,'.Rmd'),sep = "\n")
}
criarExer(codeInput,questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer(#codeInput, # não foi colocado
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer(codeInput = "",
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer(codeInput = "",
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer <- function(codeInput = "",questionInput,answerlist1Input,solutionInput = "",
answerlist2Input,exnameInput,exsolutionInput,
exshuffleInput,nameInput,user){
code <- '```{r data generation, echo = FALSE, results = "hide"}'
codeInput <- paste0(codeInput,'\n```')
question <- "\nQuestion\n========"
# questionInput
answerlist <- "\nAnswerlist\n----------"
# answerlist1Input
solution <- "\nSolution\n========"
# solutionInput
metaInformation <- "\nMeta-information\n================"
exnameInput <- paste0("exname: ",exnameInput,';;')
total <- str_count(answerlist1Input, pattern = "#")
# exsolutionInput <- '1,5' # será exsolutionInput
split <- unlist(strsplit(exsolutionInput, ","))
# preenche de 0
exsolution <- rep(0,total)
exsolution[as.numeric(split)] <- 1
if(length(exsolution[exsolution == 1]) == 1 ){
extype <- 'extype: schoice'
} else { extype <- 'extype: mchoice'}
# answerlist2Input OPTIONAL
valores <- exsolution
valores[valores == 0] <- '* Falso\n'
valores[valores == 1] <- '* Verdadeiro\n'
valores <- paste(valores , collapse ="")
# EXSOLUTION FINAL
exsolution <- paste(exsolution , collapse ="")
exsolution <- paste0('exsolution: ',exsolution)
answerlist1Input <- gsub("#", "*", answerlist1Input)
exshuffleInput <- paste0('exshuffle: ',exshuffleInput)
cat(code,codeInput,question,questionInput,
answerlist,answerlist1Input,
solution,solutionInput,answerlist,answerlist2Input,metaInformation,exnameInput,
extype,exsolution,exshuffleInput,
file = paste0('usuarios/',user,'/EXS/',nameInput,'.Rmd'),sep = "\n")
}
criarExer(codeInput = "",
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer(codeInput = "",
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
criarExer(#
questionInput = a,answerlist1Input = b,solutionInput = c,
answerlist2Input = d,exnameInput = e,exsolutionInput = '2',
exshuffleInput = 5,nameInput = 'esteNome',user = 'gian')
?dashboardPage
runApp()
runApp()
runApp()
list.files('exercicios')
unlist(strsplit(list.files('exercicios'), split='.', fixed=TRUE))[1]
strsplit(list.files('exercicios'), split='.', fixed=TRUE)
unlist(strsplit(list.files('exercicios'), split='.', fixed=TRUE))
unlist(strsplit(list.files('exercicios'), split='.', fixed=TRUE))
unlist(strsplit(list.files('exercicios'), split='.', fixed=TRUE))
unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
nameInput <- 'anova'
if(any(nameInput == unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE)))){
print('é igual')
}
nameInput <- 'anova1'
if(any(nameInput == unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE)))){
print('é igual')
}
nameInput <- 'anova'
exs <- unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
if(any(nameInput == exs)){
print('é igual')
}
nameInput <- 'anova'
exs <- unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
if(any(nameInput == exs)){
print('é igual')
}
nameInput <- 'box'
exs <- unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
if(any(nameInput == exs)){
print('é igual')
}
nameInput <- 'box'
exs <- unlist(strsplit(list.files('exercicios'), split='.Rmd', fixed=TRUE))
if(any(nameInput == exs)){
print('é igual')
}
runApp()
runApp()
runApp()
View(dados)
dados[36,3]
View(dados)
runApp()
runApp()
runApp('C:/Users/Eloi/Desktop/refresh')
runApp('C:/Users/Eloi/Desktop/refresh')
runApp()
runApp()
runApp()
exams2pdf('switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
runApp()
runApp()
a <- ' '
trimws(a)
runApp()
runApp()
a <- '3'
as.numeric(a)
a <- '3'
as.numeric(a)
a <- '3'
length(as.numeric(a))
a <- '32'
length(as.numeric(a))
a <- ' '
length(as.numeric(a))
a <- ' '
length(as.numeric(a))
a <- '3'
length(as.numeric(a))
is.numeric(as.numeric(a))
a <- 'a'
length(as.numeric(a))
is.numeric(as.numeric(a))
is.numeric(as.numeric(a))
is.numeric(a)
a <- ' '
is.numeric(a)
a <- '3'
is.numeric(a)
a <- '3'
a <- '3'
is.numeric(as.numeric(a))
a <- '32'
is.numeric(as.numeric(a))
1>-1
1>0
-1>0
a <- '-3'
is.numeric(as.numeric(a))
as.numeric(a)
as.numeric(a)
a <- 'a'
is.numeric(as.numeric(a))
is.numeric(as.numeric(a))
as.numeric(a)
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
exams2pdf('exercicios/switzerland.Rmd')
a <- 1.4
is.integer(a)
a <- 1
is.integer(a)
a <- 1L
is.integer(a)
a <- 1.4L
is.decimal(a)
round(3, digits = 0)
round(3.1, digits = 0)
round(3.5, digits = 0)
round(3.6, digits = 0)
round(3.5, digits = 0)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nomeDoEx <- '5'
file.exists(paste0('usuarios/',user,'/EXS/',nomeDoEx,'.Rmd'))
nomeDoEx <- ' '
file.exists(paste0('usuarios/',user,'/EXS/',nomeDoEx,'.Rmd'))
nomeDoEx <- ''
file.exists(paste0('usuarios/',user,'/EXS/',nomeDoEx,'.Rmd'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?textAreaInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
exsolutionInput <- '1,2'
split <- unlist(strsplit(exsolutionInput, ","))
split
if(any(split == 2))
print('blue')
if(any(split == total))
print('blue')
if(any(split == total))
print('blue')
total <- 2
if(any(split == total))
print('blue')
if(!any(split == total)){
print('A resposta correta não bate com o número de alternativas.')
}
total <- 3
exsolutionInput <- '1,2'
split <- unlist(strsplit(exsolutionInput, ","))
if(!any(split == total)){
print('A resposta correta não bate com o número de alternativas.')
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
